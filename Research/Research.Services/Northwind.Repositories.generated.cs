//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
//
//    Additional information:
//    SQL Server does not handle comparison of NText, Text, Xml, or Image data types.
//    Added SourceTableName property to every TableAdapter.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Research.Services.Northwind.NorthwindDataSetExtensions;

namespace Research.Services.Northwind.NorthwindDataSetRepositories
{

	public partial interface ICategoryRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable dataTable,System.Int32 CategoryID);
		Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable GetById(System.Int32 CategoryID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Category entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Category entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Category entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities);
	}


	public partial interface ICustomerRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable dataTable,System.String CustomerID);
		Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable GetById(System.String CustomerID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities);
	}


	public partial interface IEmployeeRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable dataTable,System.Int32 EmployeeID);
		Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable GetById(System.Int32 EmployeeID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities);
	}


	public partial interface IOrderDetailRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable dataTable,System.Int32 OrderID);
		Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable GetById(System.Int32 OrderID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities);
	}


	public partial interface IOrderRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable dataTable,System.Int32 OrderID);
		Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable GetById(System.Int32 OrderID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Order entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Order entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Order entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities);
	}


	public partial interface IProductRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable dataTable,System.Int32 ProductID);
		Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable GetById(System.Int32 ProductID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Product entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Product entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Product entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities);
	}


	public partial interface IShipperRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable dataTable,System.Int32 ShipperID);
		Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable GetById(System.Int32 ShipperID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities);
	}


	public partial interface ISupplierRepository
	{
		System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable dataTable);
		Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable GetAll();
		System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable dataTable,System.Int32 SupplierID);
		Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable GetById(System.Int32 SupplierID);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity);
		System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity);
		System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity);
		System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities);
	}


	public partial class CategoryRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.ICategoryRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CategoryTableAdapter m_Adapter = null;

		public CategoryRepository() { }

		public CategoryRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CategoryTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable dataTable, System.Int32 CategoryID)
		{
			return m_Adapter.FillById(dataTable,CategoryID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.CategoryDataTable GetById(System.Int32 CategoryID)
		{
			return m_Adapter.GetById(CategoryID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Category entity)
		{
			return m_Adapter.Insert(entity.CategoryName, entity.Description, entity.Picture);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Category entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Category entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Category entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Category entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.CategoryID, row.CategoryName);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Category[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Category entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CategoryTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class CustomerRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.ICustomerRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CustomerTableAdapter m_Adapter = null;

		public CustomerRepository() { }

		public CustomerRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CustomerTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable dataTable, System.String CustomerID)
		{
			return m_Adapter.FillById(dataTable,CustomerID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.CustomerDataTable GetById(System.String CustomerID)
		{
			return m_Adapter.GetById(CustomerID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity)
		{
			return m_Adapter.Insert(entity.CustomerID, entity.CompanyName, entity.ContactName, entity.ContactTitle, entity.Address, entity.City, entity.Region, entity.PostalCode, entity.Country, entity.Phone, entity.Fax);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.CustomerID, row.CompanyName, row.ContactName, row.ContactTitle, row.Address, row.City, row.Region, row.PostalCode, row.Country, row.Phone, row.Fax);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Customer[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Customer entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.CustomerTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class EmployeeRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.IEmployeeRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.EmployeeTableAdapter m_Adapter = null;

		public EmployeeRepository() { }

		public EmployeeRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.EmployeeTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable dataTable, System.Int32 EmployeeID)
		{
			return m_Adapter.FillById(dataTable,EmployeeID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.EmployeeDataTable GetById(System.Int32 EmployeeID)
		{
			return m_Adapter.GetById(EmployeeID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity)
		{
			return m_Adapter.Insert(entity.LastName, entity.FirstName, entity.Title, entity.TitleOfCourtesy, entity.BirthDate, entity.HireDate, entity.Address, entity.City, entity.Region, entity.PostalCode, entity.Country, entity.HomePhone, entity.Extension, entity.Photo, entity.Notes, entity.ReportsTo, entity.PhotoPath);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.EmployeeID, row.LastName, row.FirstName, row.Title, row.TitleOfCourtesy, row.BirthDate, row.HireDate, row.Address, row.City, row.Region, row.PostalCode, row.Country, row.HomePhone, row.Extension, row.ReportsTo, row.PhotoPath);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Employee[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Employee entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.EmployeeTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class OrderDetailRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.IOrderDetailRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderDetailTableAdapter m_Adapter = null;

		public OrderDetailRepository() { }

		public OrderDetailRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderDetailTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable dataTable, System.Int32 OrderID)
		{
			return m_Adapter.FillById(dataTable,OrderID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.OrderDetailDataTable GetById(System.Int32 OrderID)
		{
			return m_Adapter.GetById(OrderID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity)
		{
			return m_Adapter.Insert(entity.OrderID, entity.ProductID, entity.UnitPrice, entity.Quantity, entity.Discount);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.OrderID, row.ProductID, row.UnitPrice, row.Quantity, row.Discount);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.OrderDetail entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderDetailTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class OrderRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.IOrderRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderTableAdapter m_Adapter = null;

		public OrderRepository() { }

		public OrderRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable dataTable, System.Int32 OrderID)
		{
			return m_Adapter.FillById(dataTable,OrderID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.OrderDataTable GetById(System.Int32 OrderID)
		{
			return m_Adapter.GetById(OrderID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Order entity)
		{
			return m_Adapter.Insert(entity.CustomerID, entity.EmployeeID, entity.OrderDate, entity.RequiredDate, entity.ShippedDate, entity.ShipVia, entity.Freight, entity.ShipName, entity.ShipAddress, entity.ShipCity, entity.ShipRegion, entity.ShipPostalCode, entity.ShipCountry);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Order entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Order entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Order entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Order entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.OrderID, row.CustomerID, row.EmployeeID, row.OrderDate, row.RequiredDate, row.ShippedDate, row.ShipVia, row.Freight, row.ShipName, row.ShipAddress, row.ShipCity, row.ShipRegion, row.ShipPostalCode, row.ShipCountry);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Order[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Order entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.OrderTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class ProductRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.IProductRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ProductTableAdapter m_Adapter = null;

		public ProductRepository() { }

		public ProductRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ProductTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable dataTable, System.Int32 ProductID)
		{
			return m_Adapter.FillById(dataTable,ProductID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.ProductDataTable GetById(System.Int32 ProductID)
		{
			return m_Adapter.GetById(ProductID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Product entity)
		{
			return m_Adapter.Insert(entity.ProductName, entity.SupplierID, entity.CategoryID, entity.QuantityPerUnit, entity.UnitPrice, entity.UnitsInStock, entity.UnitsOnOrder, entity.ReorderLevel, entity.Discontinued);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Product entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Product entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Product entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Product entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.ProductID, row.ProductName, row.SupplierID, row.CategoryID, row.QuantityPerUnit, row.UnitPrice, row.UnitsInStock, row.UnitsOnOrder, row.ReorderLevel, row.Discontinued);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Product[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Product entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ProductTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class ShipperRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.IShipperRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ShipperTableAdapter m_Adapter = null;

		public ShipperRepository() { }

		public ShipperRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ShipperTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable dataTable, System.Int32 ShipperID)
		{
			return m_Adapter.FillById(dataTable,ShipperID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.ShipperDataTable GetById(System.Int32 ShipperID)
		{
			return m_Adapter.GetById(ShipperID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity)
		{
			return m_Adapter.Insert(entity.CompanyName, entity.Phone);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.ShipperID, row.CompanyName, row.Phone);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Shipper[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Shipper entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.ShipperTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

	public partial class SupplierRepository :
		Research.Services.Northwind.NorthwindDataSetRepositories.ISupplierRepository
	{
		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.SupplierTableAdapter m_Adapter = null;

		public SupplierRepository() { }

		public SupplierRepository(Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.SupplierTableAdapter adapter)
		{
			m_Adapter = adapter;
		}

		public System.Int32 Fill(Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable dataTable)
		{
			return m_Adapter.Fill(dataTable);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable GetAll()
		{
			return m_Adapter.GetAll();
		}

		public System.Int32 FillById(Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable dataTable, System.Int32 SupplierID)
		{
			return m_Adapter.FillById(dataTable,SupplierID);
		}

		public Research.DataAccess.Northwind.NorthwindDataSet.SupplierDataTable GetById(System.Int32 SupplierID)
		{
			return m_Adapter.GetById(SupplierID);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity)
		{
			return m_Adapter.Insert(entity.CompanyName, entity.ContactName, entity.ContactTitle, entity.Address, entity.City, entity.Region, entity.PostalCode, entity.Country, entity.Phone, entity.Fax, entity.HomePage);
		}

		public System.Int32 Insert(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity in entities)
				affected += Insert(entity);
			return affected;
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity)
		{
			return m_Adapter.Update(entity.AsDataRow());
		}

		public System.Int32 Update(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity in entities)
				affected += Update(entity);
			return affected;
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity)
		{
			var row = entity.AsDataRow();
			return m_Adapter.Delete(row.SupplierID, row.CompanyName, row.ContactName, row.ContactTitle, row.Address, row.City, row.Region, row.PostalCode, row.Country, row.Phone, row.Fax);
		}

		public System.Int32 Delete(Research.Services.Northwind.NorthwindDataSetEntities.Supplier[] entities)
		{
			System.Int32 affected = 0;
			foreach(Research.Services.Northwind.NorthwindDataSetEntities.Supplier entity in entities)
				affected += Delete(entity);
			return affected;
		}

		private Research.DataAccess.Northwind.NorthwindDataSetTableAdapters.SupplierTableAdapter Adapter
		{
			get
			{
				return m_Adapter;
			}
		}
	}

}